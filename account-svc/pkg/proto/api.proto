syntax = "proto3";
package proto;

//option go_package = "github.com/atyagi9006/banking-app/account-svc/pkg/proto;banking_account_v1";


import "google/api/annotations.proto";
//import "google/protobuf/struct.proto";
//import "protoc-gen-openapiv2/options/annotations.proto";


service AccountService {

    rpc SayHellogw(PingMessage) returns (PingMessage) {
        option (google.api.http) = {
             post: "/v1/ping"
             body: "*"
        };
    }

    rpc CreateBankEmployee(CreateEmployeeRequest) returns (Employee) {
        option (google.api.http) = {
             post: "/v1/employee"
             body: "*"
        };
    }

    rpc DeleteEmployee(EmployeeIdRequest) returns (EmptyMessage){
        option (google.api.http)={
        delete: "/v1/employee/{id}"
        };
    }

    rpc GetEmployee (GetEmployeeRequest) returns (Employee) {
        option (google.api.http) = {
            get: "/v1/employee"
        };
    }
    rpc GenerateToken(GenerateTokenRequest)returns (GenerateTokenResponse){}

    //customer apis
    rpc CreateCustomer(CreateCustomerRequest) returns (Customer) {
        option (google.api.http) = {
             post: "/v1/customer"
             body: "*"
        };
    }

    rpc UpdateCustomer(UpdateCustomerRequest) returns (Customer) {
        option (google.api.http) = {
             put: "/v1/customer/{id}"
             body: "*"
        };
    }

    rpc DeleteCustomer(CustomerIdRequest) returns (EmptyMessage){
        option (google.api.http)={
        delete: "/v1/customer/{id}"
        };
    }

    rpc GetCustomer (GetCustomerRequest) returns (Customer) {
        option (google.api.http) = {
            get: "/v1/customer"
        };
    }

    //accountApi
    rpc CreateAccount(CreateAccountRequest) returns (Account) {
        option (google.api.http) = {
             post: "/v1/account"
             body: "*"
        };
    }

    rpc LinkOwner (LinkOwnerRequest) returns (Account) {
        option (google.api.http) = {
            post: "/v1/account/{id}/link"
        };
    }

    rpc GetAccount (GetAccountRequest) returns (Account) {
        option (google.api.http) = {
            get: "/v1/account/{id}"
        };
    }

    //transfer amount between two accounts if currency is same
    rpc TransferAmount (TransferAmountRequest) returns (Account) {
        option (google.api.http) = {
            post: "/v1/account/transfer"
        };
    }
    
    rpc PrintStatement(PrintStatementRequest) returns(PrintStatementResponse){
        option (google.api.http) = {
            get: "/v1/account/{id}/statement"
        };
    }

}
message CreateEmployeeRequest{
    // option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
    //     json_schema: {
    //         required: ["email", "password", "full_name"]
    //     }
    // };
    string email =1; //[(grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {max_length: 80}];
    string password = 2;
    string full_name = 3;
    string role = 4; 
}

message Employee{
    string id =1;
    string email = 2 ;
    string full_name = 4;
    string role = 5;
}

// empty
message EmptyMessage {
}

message EmployeeIdRequest {
    string id = 1;
}

message GetEmployeeRequest {
    string id = 1;
    string email = 2;
}

message GenerateTokenRequest{
    string email = 1;
    string password =2; 
}
message GenerateTokenResponse{
    string token =1;
}

message CreateCustomerRequest{
    string email =1; 
    string full_name = 2;
    string address = 3;
    string kyc_type = 4;
    string kyc_id=5;
}
message Customer{
    string id = 6;
    string email =1; 
    string full_name = 2;
    string address = 3;
    string kyc_type = 4;
    string kyc_id=5;
}
message UpdateCustomerRequest{
    string kyc_type = 4;
    string kyc_id=5;
    string id =6;
}
message CustomerIdRequest{
    string id = 6;
}
message GetCustomerRequest{
    string id = 6;
    string email =1; 
    string name = 2;
}

message CreateAccountRequest{
    string owner = 1;
    string balance = 2;
    string currency =3;
    string type = 5;
}
message Account{
    string owner = 1;
    string balance = 2;
    string currency =3;
    string type = 5;
    string id=4;
}
message LinkOwnerRequest{
    string id = 1;
    string owner = 2; 
}
message GetAccountRequest{
    string id = 1;
}
message TransferAmountRequest{
    string amount = 1;
    string from_account_id = 2;
    string to_account_id = 3;
}
message PrintStatementRequest{
    string id = 1;
}
message PrintStatementResponse{
}

message PingMessage {
    string greeting = 1;
}

